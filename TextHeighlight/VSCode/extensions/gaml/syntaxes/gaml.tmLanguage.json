{
	"name": "gaml",
	"scopeName": "source.gaml",
	"patterns": [
		{
			"include": "#Comments"
		},
		{
			"include": "#Strings"
		},
		{
			"include": "#GlobalSpace"
		}
	],
	"repository": {
		"Comments": {
			"patterns": [
				{
					"include": "#BlockComment"
				},
				{
					"include": "#LineComment"
				},
				{
					"include": "#DescriptionComment"
				}
			]
		},
		"Strings": {
			"patterns": [
				{
					"name":"string.quoted.single.gaml",
					"begin": "'",
					"end": "'"
				},
				{
					"name":"string.quoted.double.gaml",
					"begin": "\"",
					"end": "\""
				}
			]
		},
		"GlobalSpace": {
			"patterns": [
				{
					"include": "#ModuleDeclaration"
				},
				{
					"include": "#ModuleImport"
				},
				{
					"include": "#ModuleImplemention"
				},
				{
					"include": "#ClassDeclaration"
				},
				{
					"include": "#FunctionDeclaration"
				},
				{
					"include": "#LambdaDeclaration"
				},
				{
					"include": "#UntypedVariableDeclaration"
				},
				{
					"include": "#VariableDeclaration"
				},
				{
					"include": "#AliasDeclaration"
				},
				{
					"include": "#AccessModifiers"
				},
				{
					"include": "#Operators"
				},
				{
					"include": "#BuildinOperators"
				},
				{
					"include": "#ClassKeywords"
				},
				{
					"include": "#StandardConstants"
				},
				{
					"include": "#PredefinedVariables"
				},
				{
					"include": "#Asserts"
				},
				{
					"include": "#Casts"
				},
				{
					"include": "#BuiltinTemplateFunc"
				},
				{
					"include": "#StandardTypes"
				},
				{
					"include": "#Numbers"
				}
			]
		},



		"BlockComment": {
			"patterns": [
				{
					"name": "comment.block.gaml",
					"begin": "\\/\\*",
					"end": "\\*\\/"
				}
			]
		},
		"LineComment": {
			"patterns": [
				{
					"name": "comment.line.gaml",
					"begin": "\\/\\/",
					"end": "\\n"
				}
			]
		},
		"DescriptionComment": {
			"patterns": [
				{
					"name": "block.description.gaml",
					"begin": "\\*\\*\\*",
					"end": "\\*\\*\\*",
					"patterns": [
						{
							"include": "#BlockComment"
						},
						{
							"include": "#LineComment"
						},
						{
							"include": "#Strings"
						},
						{
							"include": "#DescriptionModifiers"
						},
						{
							"include": "#BuildinOperators"
						},
						{
							"include": "#StandardConstants"
						},
						{
							"include": "#PredefinedVariables"
						},
						{
							"include": "#LambdaDeclaration"
						},
						{
							"include": "#Casts"
						},
						{
							"include": "#BuiltinTemplateFunc"
						},
						{
							"include": "#StandardTypes"
						},
						{
							"include": "#Numbers"
						}
					]
				}
			]
		},



		"DescriptionModifiers": {
			"patterns": [
				{
					"match": "(\\@)(?:\\s*)\\b(extern_c|cdecl|stdcall|fastcall|const|static|virtual|override|abstract|final|deprecated|unimplemented|align)\\b",
					"captures": {
						"1": {
							"name": "keyword.other.gaml"
						},
						"2": {
							"name": "keyword.other.gaml"
						}
					}
				},
				{
					"match": "(\\@)(?:\\s*)\\b(param|return)\\b(?:\\s\\s*)((?:[a-zA-Z0-9_])*)(?:\\s*)(?:\\:)(?:\\s*)((?:\\b(?:const|mut)\\b(?:\\s\\s*))*)((?:[a-zA-Z0-9_.:])*)",
					"captures": {
						"1": {
							"name": "keyword.other.gaml"
						},
						"2": {
							"name": "keyword.other.gaml"
						},
						"3": {
							"name": "variable.other.gaml"
						},
						"4": {
							"name": "keyword.other.gaml"
						},
						"5": {
							"patterns": [
								{
									"include": "#UserTypeDetection"
								}
							]
						}
					}
				}
			]
		},
		"ModuleDeclaration": {
			"patterns": [
				{
					"match": "\\b(module)\\b(?:\\s\\s*)((?:[a-zA-Z0-9_.])*)",
					"captures": {
						"1": {
							"name": "keyword.other.gaml"
						},
						"2": {
							"name": "keyword.control.module.gaml"
						}
					}
				}
			]
		},
		"ModuleImport": {
			"patterns": [
				{
					"match": "\\b(import)\\b(?:\\s\\s*)((?:[a-zA-Z0-9_.])*)(?:\\s*)(?:(\\bas\\b)?)(?:\\s?\\s*)((?:[a-zA-Z0-9_])*)",
					"captures": {
						"1": {
							"name": "keyword.other.gaml"
						},
						"2": {
							"name": "keyword.control.module.gaml"
						},
						"3": {
							"name": "keyword.other.gaml"
						},
						"4": {
							"name": "keyword.control.module_alias.gaml"
						}
					}
				}
			]
		},
		"ModuleImplemention": {
			"patterns": [
				{
					"match": "\\b(implement)\\b(?:\\s\\s*)((?:[a-zA-Z0-9_.])*)",
					"captures": {
						"1": {
							"name": "keyword.other.gaml"
						},
						"2": {
							"name": "keyword.control.module.gaml"
						}
					}
				}
			]
		},
		"ClassDeclaration": {
			"patterns": [
				{
					"match": "\\b(interface|object|component|struct|enum)\\b(?:\\s\\s*)((?:[a-zA-Z0-9_])*)(?:\\s*)(?:\\(?)(?:\\s*)((?:[a-zA-Z0-9_.:])*)(?:\\s*)(?:\\)?)",
					"captures": {
						"1": {
							"name": "keyword.other.gaml"
						},
						"2": {
							"name": "entity.name.type.gaml"
						},
						"3": {
							"patterns": [
								{
									"include": "#UserTypeDetection"
								}
							]
						}
					}
				}
			]
		},
		"FunctionDeclaration": {
			"patterns": [
				{
					"match": "\\b(func)\\b(?:\\s\\s*)((?:[a-zA-Z0-9_])*)(?:\\s*)(?:\\:\\:)(?:\\s*)((?:[a-zA-Z0-9_])*)",
					"captures": {
						"1": {
							"name": "keyword.other.gaml"
						},
						"2": {
							"name": "entity.name.type.gaml"
						},
						"3": {
							"name": "entity.name.function.gaml"
						}
					}
				},
				{
					"match": "\\b(func)\\b(?:\\s\\s*)((?:[a-zA-Z0-9_])*)",
					"captures": {
						"1": {
							"name": "keyword.other.gaml"
						},
						"2": {
							"name": "entity.name.function.gaml"
						}
					}
				}
			]	
		},
		"LambdaDeclaration": {
			
		},
		"VariableDeclaration": {
			"patterns": [
				{
					"match": "\\b(var)\\b(?:\\s\\s*)((?:\\b(?:static|const)\\b(?:\\s\\s*))*)((?:[a-zA-Z0-9_.:])*)(?:\\s\\s*)((?:[a-zA-Z0-9_])*)",
					"captures": {
						"1": {
							"name": "keyword.other.gaml"
						},
						"2": {
							"name": "keyword.other.gaml"
						},
						"3": {
							"patterns": [
								{
									"include": "#UserTypeDetection"
								}
							]
						},
						"4": {
							"name": "variable.other.gaml"
						}
					}
				}
			]
		},
		"UntypedVariableDeclaration": {
			"patterns": [
				{
					"match": "\\b(var)\\b(?:\\s\\s*)((?:[a-zA-Z0-9_])*)(?:\\s*)(?:\\;|\\=)",
					"captures": {
						"1": {
							"name": "keyword.other.gaml"
						},
						"2": {
							"name": "variable.other.gaml"
						}
					}
				}
			]
		},
		"AliasDeclaration": {
			"patterns": [
				{
					"match": "\\b(using)\\b(?:\\s\\s*)((?:[a-zA-Z0-9_])*)(?:\\s*)(?:\\=)(?:\\s*)((?:[a-zA-Z0-9_.:])*)",
					"captures": {
						"1": {
							"name": "keyword.other.gaml"
						},
						"2": {
							"name": "entity.name.type.gaml"
						},
						"3": {
							"patterns": [
								{
									"include": "#UserTypeDetection"
								}
							]
						}
					}
				}
			]	
		},



		"AccessModifiers": {
			"patterns": [
				{
					"name": "keyword.other.gaml",
					"match": "\\b(public|protected|private)\\b"
				}
			]
		},
		"Operators": {
			"patterns": [
				{
					"name": "keyword.control.gaml",
					"match": "\\b(do|while|static while|for|static for|foreach|static foreach|break|continue|if|static if|else|switch|static switch|switch_all|static switch_all|case|default|return|static)\\b"
				}
			]
		},
		"BuildinOperators": {
			"patterns": [
				{
					"name": "keyword.other.gaml",
					"match": "\\b(sizeof|typeof|nameof|alignof|isfunction|isstruct|isenum|isinterface|isobject|iscomponent|issubclass|isinstance|islambda|isiterable|isenumerable|isabstract|isalias|in|is|addr)\\b"
				}
			]
		},
		"ClassKeywords": {
			"patterns": [
				{
					"name": "keyword.other.gaml",
					"match": "\\b(this|super)\\b"
				}
			]
		},
		"StandardConstants": {
			"patterns": [
				{
					"name": "constant.language.gaml",
					"match": "\\b(true|false|None)\\b"
				}
			]
		},
		"StandardTypes": {
			"patterns": [
				{
					"name": "entity.name.type.gaml",
					"match": "\\b(class|uint8|uint16|uint32|uint64|int8|int16|int32|int64|addr_t|float|double|bool|char|string|array|vector2d|vector3d|vector4d)\\b"
				}
			]
		},
		"PredefinedVariables": {
			"patterns": [
				{
					"name": "variable.other.gaml",
					"match": "\\b(DEBUG|TARGET_PLATFORM|TARGET_ARCH|MODULE_NAME)\\b"
				}
			]
		},
		"Asserts": {
			"patterns": [
				{
					"name": "keyword.other.gaml",
					"match": "\\b(assert|static_assert|static_error|static_warning|static_message)\\b"
				}
			]
		},
		"Casts": {
			"patterns": [
				{
					"match": "\\b(cast|unsafe_cast)\\b(?:\\s*)(?:\\<\\|)(?:\\s*)((?:[a-zA-Z0-9_.:])*)(?:\\s*)(?:\\s*)(?:\\|\\>)",
					"captures": {
						"1": {
							"name": "keyword.other.gaml"
						},
						"2": {
							"patterns": [
								{
									"include": "#UserTypeDetection"
								}
							]
						}
					}
				}
			]
		},
		"BuiltinTemplateFunc": {
			"patterns": [
				{
					"match": "\\b(CreateObject|CreateComponent)\\b(?:\\s*)(?:\\<\\|)(?:\\s*)((?:[a-zA-Z0-9_.:])*)(?:\\s*)(?:\\s*)(?:\\|\\>)",
					"captures": {
						"1": {
							"name": "entity.name.function.gaml"
						},
						"2": {
							"patterns": [
								{
									"include": "#UserTypeDetection"
								}
							]
						}
					}
				}
			]
		},



		"UserTypeDetection": {
			"patterns": [
				{
					"match": "((?:[a-zA-Z0-9_.])*)(?:\\s*)(?:(?:\\:\\:))(?:\\s*)((?:[a-zA-Z0-9_])*)",
					"captures": {
						"1": {
							"name": "keyword.control.module.gaml"
						},
						"2": {
							"name": "entity.name.type.gaml"
						}
					}
				},
				{
					"name": "entity.name.type.gaml",
					"match": "((?:[a-zA-Z0-9_.])*)"
				}
			]
		},
		"Numbers": {
			"patterns": [
				{
					"name": "constant.numeric.float.gaml",
					"match": "(\\b\\d+\\.\\d*(?:[e|E][+|-]?\\d\\d*)?[f|F]\\b)"
				},
				{
					"name": "constant.numeric.double.gaml",
					"match": "(\\b\\d+\\.\\d*(?:[e|E][+|-]?\\d\\d*)?\\b)"
				},
				{
					"name": "constant.numeric.hex.gaml",
					"match": "(\\b0[x|X](?:[0-9a-fA-F])*\\b)"
				},
				{
					"name": "constant.numeric.binary.gaml",
					"match": "(\\b[0-1]*[b|B]\\b)"
				},
				{
					"name": "constant.numeric.integer.gaml",
					"match": "(\\b\\d+\\b)"
				}
			]
		}
	}
}
